services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/pos_db
      - NODE_ENV=production
    depends_on:
      - db
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    restart: always

  db:
    image: postgres:15  # Changed to PostgreSQL 17 using alpine for smaller size
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pos_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    command: postgres -c logging_collector=on -c log_directory=/var/log/postgresql  # Added logging

  backup:
    image: postgres:15  # Changed to match db version
    volumes:
      - postgres_data:/source-data:ro
      - ./backups:/backups
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pos_db
    command: |
      /bin/bash -c '
        while true; do
          pg_dump -h db -U postgres pos_db > /backups/backup-$$(date +%Y%m%d_%H%M%S).sql
          find /backups -type f -mtime +7 -delete
          sleep 86400
        done
      '
    depends_on:
      - db
    restart: always

volumes:
  postgres_data:
    driver: local